---
import { getCollection, type CollectionEntry } from "astro:content";
import Layout from "../../layouts/Layout.astro";
import H1 from "../../components/H1.astro";
import Main from "../../components/Main.astro";
import { Image } from 'astro:assets';

export const getStaticPaths = async () => {
    const posts = await getCollection("posts");
    return posts.map(post => ({
        params: { slug: post.slug },
        props: { post },
    }));
}

type Props = {
    post: CollectionEntry<"posts">
}

const { post } = Astro.props;
const { Content } = await post.render();
---
{/* IMPROVEMENT: Pass the post's data to the Layout for better SEO.
  - `description`: Uses the post's description for meta tags.
  - `image`: Uses the post's cover image for social sharing.
  - `type='article'`: Tells search engines this is a blog post.
*/}
<Layout 
    title={post.data.title} 
    description={post.data.description} 
    image={post.data.image.src}
    type="article"
>
    <Main>
        <H1 text={post.data.title} />

        {/* IMPROVEMENT: Let astro:assets handle the aspect ratio automatically.
          By removing the `height` prop, Astro will calculate it from the source image,
          preventing distortion and making your code simpler.
        */}
        <Image
            src={post.data.image}
            alt={post.data.title}
            width={1024}
            class="rounded-2xl shadow-xl mb-8 aspect-thumbnail object-cover"
        />

        {/* The `prose` class from Tailwind Typography is perfect for styling MDX content.
          The `prose-2xl` might be a bit large; `prose-lg` is often a good starting point.
        */}
        <div class="prose prose-lg max-w-none prose-headings:text-black">
            <Content />
        </div>
    </Main>
</Layout>
